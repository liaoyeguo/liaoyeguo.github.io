{"componentChunkName":"component---src-templates-blog-post-blog-post-js","path":"/frontend/variable/","webpackCompilationHash":"354c65fdf1f8f42980f7","result":{"data":{"markdownRemark":{"html":"<h2 id=\"变量值的类型\"><a href=\"#%E5%8F%98%E9%87%8F%E5%80%BC%E7%9A%84%E7%B1%BB%E5%9E%8B\" aria-label=\"变量值的类型 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>变量值的类型</h2>\n<p>Javascript语言里，变量的值一共有七种。其中前六种被称为值类型（primitive type），其余的一种被称为引用类型。</p>\n<ul>\n<li><code class=\"language-text\">number</code></li>\n<li><code class=\"language-text\">string</code></li>\n<li><code class=\"language-text\">boolean</code></li>\n<li><code class=\"language-text\">undefined</code></li>\n<li><code class=\"language-text\">null</code></li>\n<li><code class=\"language-text\">symbol</code>（从es6开始引入这一类型）</li>\n<li><code class=\"language-text\">object</code></li>\n</ul>\n<h2 id=\"typeof操作符的返回值\"><a href=\"#typeof%E6%93%8D%E4%BD%9C%E7%AC%A6%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC\" aria-label=\"typeof操作符的返回值 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">typeof</code>操作符的返回值</h2>\n<p>对变量使用<code class=\"language-text\">typeof</code>操作符，会返回一个<code class=\"language-text\">string</code>类型的结果，可以根据返回值判断变量保存的值的类型。注意，<code class=\"language-text\">null</code>虽然是基本类型，但是对它使用<code class=\"language-text\">typeof</code>操作符的结果是<code class=\"language-text\">object</code>。数组也是一种特殊的<code class=\"language-text\">object</code>。虽然函数也是一种特殊的object，但是因为它是可以调用的。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 六种值类型</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token number\">1</span> <span class=\"token comment\">// \"number\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token string\">\"s\"</span> <span class=\"token comment\">// \"string\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// \"boolead\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">undefined</span> <span class=\"token comment\">// \"undefined\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// \"object\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"symbol\"</span>\n\n<span class=\"token comment\">// 引用类型</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// \"object\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// \"object\"</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// \"function\"</span></code></pre></div>\n<p>为什么说数组、函数都是<code class=\"language-text\">object</code>呢？因为他们都是<code class=\"language-text\">Object</code>类型的实例。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Array <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span> <span class=\"token comment\">// true</span>\nFunction <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h2 id=\"值类型的包装对象\"><a href=\"#%E5%80%BC%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8C%85%E8%A3%85%E5%AF%B9%E8%B1%A1\" aria-label=\"值类型的包装对象 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>值类型的包装对象</h2>\n<p>Javascript在必要时会把值类型的变量转换为对应的包装对象变量。比如说在调用值类型变量的方法的时候，<code class=\"language-text\">&quot;hellow&quot;.length</code>。值类型本身是没有方法的，能调用方法就是因为Javascript悄悄地把变量转换成了对应的包装对象。</p>\n<p>对应的包装对象</p>\n<ul>\n<li><code class=\"language-text\">Number</code></li>\n<li><code class=\"language-text\">String</code></li>\n<li><code class=\"language-text\">Boolean</code></li>\n<li><code class=\"language-text\">Symbol</code></li>\n<li><code class=\"language-text\">BigInt</code></li>\n</ul>\n<h3 id=\"使用包装对象\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%8C%85%E8%A3%85%E5%AF%B9%E8%B1%A1\" aria-label=\"使用包装对象 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用包装对象</h3>\n<p>如果把包装对象当作函数来调用，它会返回一个对应的基本类型的值。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">typeof</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"number\"</span></code></pre></div>\n<p>如果把包装对象当作构造函数来调用，它会直接返回包装对象类型的值（包装对象也是一种<code class=\"language-text\">object</code>）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"object\"</span></code></pre></div>\n<h2 id=\"和\"><a href=\"#%E5%92%8C\" aria-label=\"和 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">==</code>和<code class=\"language-text\">!=</code></h2>","id":"6ebf2723-1807-57ad-a46b-4ee6a8c1bea3","frontmatter":{"title":"","date":null,"description":null,"author":null,"tags":null},"fields":{"slug":"frontend/variable/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"frontend/variable/"}}}