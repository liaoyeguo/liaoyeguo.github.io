{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/unwidow.js"],"names":["YearTitle","_ref","children","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","year","PostTitle","_ref2","IndexPage","title","useSiteMetadata","posts","_public_static_d_4053151257_json__WEBPACK_IMPORTED_MODULE_0__","data","allMarkdownRemark","edges","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","length","map","_ref3","index","YearComponent","node","fields","frontmatter","id","thisYear","post","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","slug","unwidow","description","noPost","str","clean","trim","replace","match","split","pop"],"mappings":"0LAMMA,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,MAAON,IAE1BO,EAAY,SAAAC,GAAA,IAAGR,EAAHQ,EAAGR,SAAH,OAAkBC,EAAAC,EAAAC,cAAA,UAAKH,IAyE1BS,UAvEG,WAAM,IACdC,EAAUC,cAAVD,MAqBFE,EApBOC,EAAAC,KAoBMC,kBAAkBC,MACjCV,EAAO,IAEX,OACEL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACEhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAQO,IAGVT,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOO,OACrBX,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,YACGS,EAAMO,OAAS,EACdP,EAAMQ,IAAI,SAAAC,EAAWC,GAAU,IAGzBC,EAHOC,EAAkBH,EAAlBG,KACHC,EAA4BD,EAA5BC,OAAQC,EAAoBF,EAApBE,YAAaC,EAAOH,EAAPG,GACvBC,EAAWF,EAAYpB,KAQ7B,OALIsB,IAAatB,IACfiB,EAAgBtB,EAAAC,EAAAC,cAACL,EAAD,KAAY4B,EAAYpB,MACxCA,EAAOsB,GAIP3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOwB,KAAMC,IAAKH,GAC/BJ,EAEDtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAAC4B,EAAA,KAAD,CAAMC,GAAIP,EAAOQ,MACdC,YAAQR,EAAYhB,SAIzBT,EAAAC,EAAAC,cAAA,SAAI+B,YAAQR,EAAYS,kBAMhClC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO+B,QAAvB,qECvDCF,IAlBC,SAAAG,GAEd,IAAMC,EAAQD,EAAIE,OAAOC,QAAQ,OAAQ,KAKzC,OADcF,EAAMG,MAAM,QAAU,GAAGtB,QAC3B,EAAUmB,EAGlBA,EAAMI,MAAM,KAAKC,MAAMxB,OAAS,GAAWmB,EAKxCA,EAAME,QAAQ,oBAAqB","file":"component---src-pages-index-js-366722c0a4042fb7b41f.js","sourcesContent":["import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { useSiteMetadata } from '../utils/hooks'\nimport unwidow from '../utils/unwidow'\nimport styles from './index.module.css'\nconst YearTitle = ({ children }) => (\n  <div className={styles.year}>{children}</div>\n)\nconst PostTitle = ({ children }) => <h1>{children}</h1>\n\nconst IndexPage = () => {\n  const { title } = useSiteMetadata()\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              description\n              year: date(formatString: \"YYYY\")\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMarkdownRemark.edges\n  let year = '0'\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n\n      <div className={styles.posts}>\n        <article>\n          <main>\n            {posts.length > 0 ? (\n              posts.map(({ node }, index) => {\n                const { fields, frontmatter, id } = node\n                const thisYear = frontmatter.year\n                let YearComponent\n\n                if (thisYear !== year) {\n                  YearComponent = <YearTitle>{frontmatter.year}</YearTitle>\n                  year = thisYear\n                }\n\n                return (\n                  <div className={styles.post} key={id}>\n                    {YearComponent}\n\n                    <div>\n                      <PostTitle>\n                        <Link to={fields.slug}>\n                          {unwidow(frontmatter.title)}\n                        </Link>\n                      </PostTitle>\n\n                      <p>{unwidow(frontmatter.description)}</p>\n                    </div>\n                  </div>\n                )\n              })\n            ) : (\n              <div className={styles.noPost}>没有找到文章</div>\n            )}\n          </main>\n        </article>\n      </div>\n    </>\n  )\n}\n\nexport default IndexPage\n","const unwidow = str => {\n  // Remove extra whitespace characters before starting.\n  const clean = str.trim().replace(/\\s+/g, ' ')\n\n  // We only care about strings with at least 4 words, so if we don't find at\n  // least 3 spaces in the string we can just return the cleaned up string.\n  const count = clean.match(/\\s/g) || [].length\n  if (count < 3) return clean\n\n  // If the last word is long enough, just return the cleaned string.\n  if (clean.split(' ').pop().length > 15) return clean\n\n  // Regex matches the last instance of a whitespace character that is followed\n  // by a non-whitespace character. It then replaces the former with a\n  // non-breaking space character (\\u00A0).\n  return clean.replace(/\\s+([\\S]*)(\\s*)$/g, '\\u00A0$1$2')\n}\n\nexport default unwidow\n"],"sourceRoot":""}